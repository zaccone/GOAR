---
- RuleName: rule1
  DeviceType: ARISTA
  Regex: 'Line protocol on Interface (?P<interface>\S+).+changed state to down'
  Remediations:
    - port_down_arista.py
  AlertType: Interface Status
- RuleName: rule_junos
  DeviceType: JUNOS
  Regex: 'mib2d\[\d+\]: SNMP_TRAP_LINK_DOWN: ifIndex \d+, ifAdminStatus \w+\(\d+\), ifOperStatus \w+\(\d+\), ifName (?P<interface>\S+)'
  Remediations:
    - port_down_junos.py
  AlertType: Interface Status
- RuleName: OSXCPU
  DeviceType: OSX
  Regex: 'stopping: Maximum sustainable CPU utilization limit exceeded: (?P<utilization>\d+)'
  Remediations:
    - kill_process.py
  AlertType: OS Level problem
- RuleName: OSXKEYSTONE
  DeviceType: OSX
  Regex: 'com.google.Keystone.Daemon.Administration: (?P<connections>\d+) connection(s)'
  Remediations:
    - kill_process.py
  AlertType: OS Level problem
- RuleName: OSXGOOGLESOFTWARE
  DeviceType: OSX
  Regex: 'GoogleSoftwareUpdate daemon \((?P<version>.+)\)'
  Remediations:
    - kill_process.py
  AlertType: OS Level problem
- RuleName: ServiceDisplay
  DeviceType: OSX
  Regex: 'Service only ran for (?P<ran_time>\d+) seconds. Pushing respawn out by (?P<respawn>\d+) seconds'
  Remediations:
   - kill_process.py
   - restart_process.py
  AlertType: OS Level problem
- RuleName: CustomMarekRule
  DeviceType: MDE
  Regex: 'MDE: (?P<name>\S+) (?P<surname>\S+)'
  Remediations:
   - append.py
